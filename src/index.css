@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
    --w-white-light: #fffefe;
    --w-white-dark: #e6e6e6;
    --w-white: var(--w-white-light);

    --w-black-light: #161616;
    --w-black-dark: #000000;
    --w-black: var(--w-black-light);

    --w-red-light: #f87171;
    --w-red-dark: #7f1d1d;
    --w-red: var(--w-red-light);

    --w-orange-light: #f59e0b;
    --w-orange-dark: #a67000;
    --w-orange: var(--w-orange-light);

    --w-yellow-light: #ffcc00;
    --w-yellow-dark: #a69600;
    --w-yellow: var(--w-yellow-light);

    --w-green-light: #84cc16;
    --w-green-dark: #00a600;
    --w-green: var(--w-green-light);

    --w-blue-light: #0099ff;
    --w-blue-dark: #1e3a8a;
    --w-blue: var(--w-blue-light);

    --w-indigo-light: #888afd;
    --w-indigo-dark: #312e81;
    --w-indigo: var(--w-indigo-light);

    --w-violet-light: #c084fc;
    --w-violet-dark: #581c87;
    --w-violet: var(--w-violet-light);


    /* cursor: url(
        "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='28' height='29' fill='none' viewBox='0 0 28 29'%3E%3Cpath fill='%23fff' d='M6.84 21.83c-.47-.6-1.05-1.82-2.07-3.34-.58-.83-2.01-2.41-2.45-3.23a2.1 2.1 0 0 1-.25-1.67 2.2 2.2 0 0 1 2.39-1.67c.85.18 1.63.6 2.25 1.2.43.41.82.85 1.18 1.32.27.34.33.47.63.85.3.39.5.77.35.2-.11-.83-.31-2.23-.6-3.48-.21-.95-.26-1.1-.46-1.82s-.32-1.32-.54-2.13c-.2-.8-.35-1.62-.46-2.44a4.7 4.7 0 0 1 .43-3.08c.58-.55 1.44-.7 2.17-.37a4.4 4.4 0 0 1 1.57 2.17c.43 1.07.72 2.19.86 3.33.27 1.67.79 4.1.8 4.6 0-.61-.11-1.91 0-2.5.12-.6.54-1.1 1.12-1.33.5-.15 1.02-.19 1.53-.1.52.1.98.4 1.29.83.38.98.6 2 .63 3.05.04-.91.2-1.82.47-2.7.28-.39.68-.67 1.15-.8.55-.1 1.11-.1 1.66 0 .46.15.85.44 1.14.82.35.88.56 1.82.63 2.77 0 .23.12-.65.48-1.24a1.67 1.67 0 1 1 3.17 1.07v3.77c-.06.97-.2 1.94-.4 2.9-.29.85-.7 1.65-1.2 2.38-.8.9-1.48 1.92-1.98 3.02a6.67 6.67 0 0 0 .03 3.2c-.68.07-1.37.07-2.05 0-.65-.1-1.45-1.4-1.67-1.8a.63.63 0 0 0-1.13 0c-.37.64-1.18 1.79-1.75 1.85-1.12.14-3.42 0-5.23 0 0 0 .3-1.66-.39-2.27-.68-.6-1.38-1.3-1.9-1.76l-1.4-1.6Z'/%3E%3Cpath stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2.25' d='M6.84 21.83c-.47-.6-1.05-1.82-2.07-3.34-.58-.83-2.01-2.41-2.45-3.23a2.1 2.1 0 0 1-.25-1.67 2.2 2.2 0 0 1 2.39-1.67c.85.18 1.63.6 2.25 1.2.43.41.82.85 1.18 1.32.27.34.33.47.63.85.3.39.5.77.35.2-.11-.83-.31-2.23-.6-3.48-.21-.95-.26-1.1-.46-1.82s-.32-1.32-.54-2.13c-.2-.8-.35-1.62-.46-2.44a4.7 4.7 0 0 1 .43-3.08c.58-.55 1.44-.7 2.17-.37a4.4 4.4 0 0 1 1.57 2.17c.43 1.07.72 2.19.86 3.33.27 1.67.79 4.1.8 4.6 0-.61-.11-1.91 0-2.5.12-.6.54-1.1 1.12-1.33.5-.15 1.02-.19 1.53-.1.52.1.98.4 1.29.83.38.98.6 2 .63 3.05.04-.91.2-1.82.47-2.7.28-.39.68-.67 1.15-.8.55-.1 1.11-.1 1.66 0 .46.15.85.44 1.14.82.35.88.56 1.82.63 2.77 0 .23.12-.65.48-1.24a1.67 1.67 0 1 1 3.17 1.07v3.77c-.06.97-.2 1.94-.4 2.9-.29.85-.7 1.65-1.2 2.38-.8.9-1.48 1.92-1.98 3.02a6.67 6.67 0 0 0 .03 3.2c-.68.07-1.37.07-2.05 0-.65-.1-1.45-1.4-1.67-1.8a.63.63 0 0 0-1.13 0c-.37.64-1.18 1.79-1.75 1.85-1.12.14-3.42 0-5.23 0 0 0 .3-1.66-.39-2.27-.68-.6-1.38-1.3-1.9-1.76l-1.4-1.6Z' clip-rule='evenodd'/%3E%3Cpath fill='%23000' d='M20.65 22.3v-6.24c0-.38-.31-.68-.7-.68-.37 0-.68.3-.68.68v6.23c0 .38.3.68.69.68.38 0 .69-.3.69-.68ZM17.2 22.3l-.04-6.25a.67.67 0 1 0-1.34.01l.04 6.24a.67.67 0 1 0 1.34 0ZM12.37 16.07l.04 6.22c0 .38.3.68.67.68.37 0 .67-.3.67-.68l-.04-6.23c0-.38-.3-.68-.67-.68-.37 0-.67.31-.67.69Z'/%3E%3C/svg%3E"
      ),auto; */
}
:focus {
    outline: none;
}



.input {
    border: 1px solid;
    padding: 0.75rem 0.75rem;
    border-radius: 0.125rem;
    box-shadow: 2px 2px var(--w-green-dark), 4px 4px var(--w-black-dark), inset 0 0 0 2px var(--w-indigo-dark);
    margin: 0 5px 5px 0;
    font-size: 1rem;
    font-weight: normal;
    cursor: url(
        "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='13' height='25' fill='none' viewBox='0 0 13 25'%3E%3Cpath fill='%23000' stroke='%23fff' stroke-width='1.75' d='M8 18.48v-4.23h1.27v-3H8V5.8c.2-.44.5-.82.87-1.14.23-.16.52-.32.83-.44a5.4 5.4 0 0 1 1.17-.05l.87.05.05-.87.08-1.27.06-.87-.88-.06c-.7-.04-1.4 0-2.1.14l-.05.01-.06.02c-.7.25-1.29.56-1.82.95L7 2.28l-.03.02c-.16.13-.31.28-.46.42a6.93 6.93 0 0 0-.39-.38l-.03-.03-.03-.02a5.86 5.86 0 0 0-1.85-.97l-.04-.01-.04-.01a8.1 8.1 0 0 0-2.19-.16l-.87.06.06.87.08 1.27.06.88.87-.06c.43-.03.85 0 1.27.08.23.08.5.21.74.4.33.3.63.72.84 1.19v5.42H3.72v3h1.27v4.2c-.21.47-.51.89-.88 1.24-.2.14-.46.28-.75.37-.36.07-.8.1-1.22.06l-.87-.05-.06.87-.08 1.27-.06.88.87.05c.71.05 1.42 0 2.12-.14h.04l.04-.02a5.83 5.83 0 0 0 1.88-.95l.03-.02.03-.03.44-.43c.14.14.28.27.44.4l.02.02.02.01c.55.42 1.14.73 1.76.95l.05.02.06.01c.77.17 1.47.22 2.17.18l.88-.05-.05-.87-.07-1.27-.05-.87-.87.04c-.42.03-.83 0-1.24-.08-.24-.1-.52-.25-.8-.45A3.4 3.4 0 0 1 8 18.48Z'/%3E%3C/svg%3E"
      ),auto;
}

.input:hover {
  box-shadow: 2px 2px var(--w-green-light), 4px 4px var(--w-black-dark), inset 0 0 0 2px var(--w-indigo-dark);
}

.label {
  font-size: 1rem;
  line-height: 2rem;
  font-weight: bold;
}
div {
    font-family: "zcool", Tofu;
}

.material-symbols-outlined {
    font-family: 'Material Symbols Outlined';
}

.switch {
  position: relative;
  display: inline-block;
}

.switch input { 
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
  box-shadow: 2px 2px var(--w-green-dark), 4px 4px var(--w-black-dark), inset 0 0 0 2px var(--w-indigo-dark);
  height: 20px;
  width: 40px;
  margin: 0 5px 5px 0;
  padding: 5px;
}

.slider:hover {
  box-shadow: 2px 2px var(--w-green-light), 4px 4px var(--w-black-dark), inset 0 0 0 2px var(--w-indigo-dark);
}

.slider:before {
  position: absolute;
  content: "";
  height: 16px;
  width: 16px;
  left: 1px;
  bottom: 2px;
  background-color: rgb(255, 255, 255);
  -webkit-transition: .4s;
  transition: .4s;
  border: 2px solid;
}

input:checked + .slider {
  background-color: var(--w-blue);
}

input:focus + .slider {
  box-shadow: 0 0 1px #3336cb;
}

input:checked + .slider:before {
  -webkit-transform: translateX(20px);
  -ms-transform: translateX(20px);
  transform: translateX(20px);
}

input:checked + .slider:before {
  background-color: var(--w-yellow-light);
}

/* Rounded sliders */
.slider.round {
  border-radius: 30px;
}

.slider.round:before {
  border-radius: 50%;
}


/* 隐藏默认的单选按钮 */
.radio {
  position: relative;
  padding-left: 25px;
  cursor: pointer;
  display: inline-block;
  user-select: none;
}

.radio input[type="radio"] {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* 创建一个自定义的单选按钮外观 */
.radio .checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 20px;
  width: 20px;
  background-color: var(--w-white-dark);
  border-radius: 50%;
  border: 1px solid var(--w-black);
  box-shadow: 1px 1px var(--w-green-light), 2px 2px var(--w-black-dark), inset 0 0 0 1px var(--w-indigo-dark);

}


/* 在自定义单选按钮内部添加一个白色的圆点 */
.radio .checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* 当单选按钮被选中时，显示内部的白色圆点 */
.radio  .checkmark:after {
  top: 4px;
  left: 4px;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background-color: var(--w-yellow);
  border: 1px solid;
  display:  none;
}


.radio input[type="radio"]:checked ~ .checkmark:after {

  display: block;
}

.radio input[type="radio"]:checked ~ .checkmark {
  background-color: var(--w-blue);
  border: 0;

}


/* 隐藏默认的复选框按钮 */
/* label的样式，都是一些基本的 */
.checkbox {
  position: relative;
  padding-left: 25px;
  cursor: pointer;
  display: inline-block;
  user-select: none;
}

/* label里的input也就是原生checkbox，将其隐藏即可 */
.checkbox input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* checkmark也就是我们植入的span，用于绘制新的样式，也就是方形阴影的白框 */
.checkbox .checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 20px;
  width: 20px;
  background-color: #eee;
  border-radius: 4px;
  border: 1px solid;
  box-shadow: 1px 1px var(--w-green-dark), 2px 2px var(--w-black-dark), inset 0 0 0 1px var(--w-indigo-dark);
}

/* 鼠标悬停时，阴影的颜色变化 算是css的细节 */
.checkbox .checkmark:hover{
  box-shadow: 1px 1px var(--w-green-light), 2px 2px var(--w-black-dark), inset 0 0 0 1px var(--w-indigo-dark);
}

/* 选中时，阴影的颜色变为蓝色 */
.checkbox input[type="checkbox"]:checked ~ .checkmark {
  background-color: var(--w-blue-light);
}

/* 绘制选中时候的对号，默认是display:none看不到 */
.checkbox .checkmark:after {
  content: "";
  position: absolute;
  display: none;
  box-shadow: 3px 1px 1px;
  left: 6px;
  top: 2px;
  width: 6px;
  height: 12px;
  border: solid var(--w-yellow);
  border-width: 0 3px 3px 0;
  transform: rotate(45deg);
}

/* 选中的时候就看到咯 */
.checkbox input[type="checkbox"]:checked ~ .checkmark:after {
  display: block;
}

label {
  cursor: pointer;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.arrow {
  transition: all 400ms ease;
  transform: rotate(0deg);
}

.listbox{
  animation: fadeIn 0.5s forwards;
  background: var(--w-white);
  z-index: 999;
  position: relative;
}

.listbox::before{
  content: ''; /* 伪元素需要内容来显示，即使是空的 */
  position: absolute; /* 绝对定位相对于父级的relative定位 */
  top: -16px; /* 将烟囱向上移动，调整这个值来改变烟囱的高度 */
  right: 35px; /* 烟囱的水平位置，根据需要调整 */
  width: 30px; /* 烟囱的宽度，根据需要调整 */
  height: 19px; /* 烟囱的高度，根据需要调整 */
  background-color: white; /* 烟囱的颜色，与边框相同 */
  border-left: 3px solid var(--w-indigo-dark);
  border-right: 3px solid var(--w-indigo-dark);
  border-radius: 1px;
}